// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nat64.proxy.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetNAT64Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNAT64Response) Reset()         { *m = SetNAT64Response{} }
func (m *SetNAT64Response) String() string { return proto.CompactTextString(m) }
func (*SetNAT64Response) ProtoMessage()    {}
func (*SetNAT64Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_d46edebe85e26fd4, []int{0}
}

func (m *SetNAT64Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNAT64Response.Unmarshal(m, b)
}
func (m *SetNAT64Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNAT64Response.Marshal(b, m, deterministic)
}
func (m *SetNAT64Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNAT64Response.Merge(m, src)
}
func (m *SetNAT64Response) XXX_Size() int {
	return xxx_messageInfo_SetNAT64Response.Size(m)
}
func (m *SetNAT64Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNAT64Response.DiscardUnknown(m)
}

var xxx_messageInfo_SetNAT64Response proto.InternalMessageInfo

type SetNAT64Request struct {
	Request              *GetNAT64Response `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Zone                 string            `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetNAT64Request) Reset()         { *m = SetNAT64Request{} }
func (m *SetNAT64Request) String() string { return proto.CompactTextString(m) }
func (*SetNAT64Request) ProtoMessage()    {}
func (*SetNAT64Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_d46edebe85e26fd4, []int{1}
}

func (m *SetNAT64Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNAT64Request.Unmarshal(m, b)
}
func (m *SetNAT64Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNAT64Request.Marshal(b, m, deterministic)
}
func (m *SetNAT64Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNAT64Request.Merge(m, src)
}
func (m *SetNAT64Request) XXX_Size() int {
	return xxx_messageInfo_SetNAT64Request.Size(m)
}
func (m *SetNAT64Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNAT64Request.DiscardUnknown(m)
}

var xxx_messageInfo_SetNAT64Request proto.InternalMessageInfo

func (m *SetNAT64Request) GetRequest() *GetNAT64Response {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *SetNAT64Request) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*SetNAT64Response)(nil), "uver.SetNAT64Response")
	proto.RegisterType((*SetNAT64Request)(nil), "uver.SetNAT64Request")
}

func init() { proto.RegisterFile("nat64.proxy.proto", fileDescriptor_d46edebe85e26fd4) }

var fileDescriptor_d46edebe85e26fd4 = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x4b, 0x2c, 0x31,
	0x33, 0xd1, 0x2b, 0x28, 0xca, 0xaf, 0xa8, 0x04, 0x91, 0x25, 0xf9, 0x42, 0x2c, 0xa5, 0x65, 0xa9,
	0x45, 0x52, 0xdc, 0x70, 0x89, 0x92, 0x7c, 0x25, 0x21, 0x2e, 0x81, 0xe0, 0xd4, 0x12, 0x3f, 0xc7,
	0x10, 0x33, 0x93, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0xa5, 0x70, 0x2e, 0x7e, 0x84,
	0x58, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x01, 0x17, 0x7b, 0x11, 0x84, 0x29, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x6d, 0x24, 0xa6, 0x07, 0x32, 0x4b, 0xcf, 0x1d, 0x4d, 0x6f, 0x10, 0x4c, 0x99, 0x90,
	0x10, 0x17, 0x4b, 0x55, 0x7e, 0x5e, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x6d,
	0xe4, 0xc9, 0xc5, 0x13, 0x00, 0x72, 0x4e, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x25,
	0x17, 0x07, 0xcc, 0x22, 0x21, 0x51, 0x88, 0x81, 0x68, 0x16, 0x4b, 0x89, 0xa1, 0x0b, 0x43, 0xec,
	0x71, 0x62, 0x8f, 0x62, 0x05, 0x7b, 0x20, 0x89, 0x0d, 0x4c, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x8e, 0xee, 0xd5, 0x49, 0xef, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyServiceClient is the client API for ProxyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyServiceClient interface {
	SetNAT64(ctx context.Context, in *SetNAT64Request, opts ...grpc.CallOption) (*SetNAT64Response, error)
}

type proxyServiceClient struct {
	cc *grpc.ClientConn
}

func NewProxyServiceClient(cc *grpc.ClientConn) ProxyServiceClient {
	return &proxyServiceClient{cc}
}

func (c *proxyServiceClient) SetNAT64(ctx context.Context, in *SetNAT64Request, opts ...grpc.CallOption) (*SetNAT64Response, error) {
	out := new(SetNAT64Response)
	err := c.cc.Invoke(ctx, "/uver.ProxyService/SetNAT64", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServiceServer is the server API for ProxyService service.
type ProxyServiceServer interface {
	SetNAT64(context.Context, *SetNAT64Request) (*SetNAT64Response, error)
}

func RegisterProxyServiceServer(s *grpc.Server, srv ProxyServiceServer) {
	s.RegisterService(&_ProxyService_serviceDesc, srv)
}

func _ProxyService_SetNAT64_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNAT64Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).SetNAT64(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uver.ProxyService/SetNAT64",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).SetNAT64(ctx, req.(*SetNAT64Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uver.ProxyService",
	HandlerType: (*ProxyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetNAT64",
			Handler:    _ProxyService_SetNAT64_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nat64.proxy.proto",
}
